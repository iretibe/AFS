//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AFS.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AFS_DBEntities : DbContext
    {
        public AFS_DBEntities()
            : base("name=AFS_DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__EFMigrationsHistory> C__EFMigrationsHistory { get; set; }
        public virtual DbSet<AspNetRoleClaim> AspNetRoleClaims { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<AspNetUserToken> AspNetUserTokens { get; set; }
        public virtual DbSet<tblLeetSpeek> tblLeetSpeeks { get; set; }
    
        public virtual int spInsertLeetSpeak(string inputText, string translationType, string translatedText, string createBy)
        {
            var inputTextParameter = inputText != null ?
                new ObjectParameter("InputText", inputText) :
                new ObjectParameter("InputText", typeof(string));
    
            var translationTypeParameter = translationType != null ?
                new ObjectParameter("TranslationType", translationType) :
                new ObjectParameter("TranslationType", typeof(string));
    
            var translatedTextParameter = translatedText != null ?
                new ObjectParameter("TranslatedText", translatedText) :
                new ObjectParameter("TranslatedText", typeof(string));
    
            var createByParameter = createBy != null ?
                new ObjectParameter("CreateBy", createBy) :
                new ObjectParameter("CreateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertLeetSpeak", inputTextParameter, translationTypeParameter, translatedTextParameter, createByParameter);
        }
    
        public virtual ObjectResult<spSelectAllLeetSpeekTexts> spSelectAllLeetSpeekTexts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelectAllLeetSpeekTexts>("spSelectAllLeetSpeekTexts");
        }
    }
}
